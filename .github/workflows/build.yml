name: Build

on:
  push:
    branches:
      - '*'
    tags:
      - '*' 
env:
  OutputDirectory: ${{ github.workspace}}/output

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Clone Repo
        uses: actions/checkout@master
        with:
          submodules: true
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Build
        run: dotnet build -c Release --property:OutputPath=${{ env.OutputDirectory }}

      - name: Upload Nuget
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.OutputDirectory }}/*.nupkg

      - name: Upload Dlls
        uses: actions/upload-artifact@v3
        with:
          name: dlls
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.OutputDirectory }}/*.dll
          
      - name: Upload XMLs
        uses: actions/upload-artifact@v3
        with:
          name: xmls
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.OutputDirectory }}/*.xml
  deploy:
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:

      - name: Download Nuget Files
        uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.OutputDirectory }}/nuget
         
      - name: Download Dll Files
        uses: actions/download-artifact@v3
        with:
          name: dlls
          path: ${{ env.OutputDirectory }}/dlls

      - name: Download Xml Files
        uses: actions/download-artifact@v3
        with:
          name: xmls
          path: ${{ env.OutputDirectory }}/xmls

          
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
          
      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Publish NuGet package
        shell: pwsh
        run: |
          foreach($file in (Get-ChildItem "${{ env.OutputDirectory }}/nuget" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.OutputDirectory }}/dlls/*.dll
            ${{ env.OutputDirectory }}/xmls/*.xml
